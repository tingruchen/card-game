# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  node: circleci/node@5.0.3

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build_and_test: # this can be any name you choose
    working_directory: ~/mern-starter
    # Reuse Docker container specification given by the node Orb
    executor: node/default
    steps:
      - checkout
      # Install dependencies - the node Orb take care of installation and dependency caching
      - node/install-packages:
          app-dir: ~/mern-starter
          cache-path: node_modules
          override-ci-command: npm i --legacy-peer-dep
          pkg-manager: yarn
      - run:
          name: Run tests
          command: yarn test
      - run:
          name: Build app
          command: yarn build
      - run:
          name: Check
          command: pwd & ls
      # Save workspace for subsequent jobs (i.e. test)
      - persist_to_workspace:
          root: .
          paths:
            - .

  deploy: # this can be any name you choose
    docker:
      # The primary container is an instance of the first image listed. The job's commands run in this container.
      - image: cimg/node:current
    steps:
      # Reuse the workspace from the build job
      - attach_workspace:
          at: .
      - run:
          name: Check
          command: pwd & ls
      - run:
          name: Deploy app to Firebase Hosting
          command: ./node_modules/.bin/firebase deploy --token=$FIREBASE_TOKEN
          name: node version
          command: node -v
  # release-job:
  #   docker:
  #     # replace with your preferred image
  #     - image: cimg/base:stable
  #   steps:
  #     - node/install:
  #         install-yarn: false
  #         node-version: '14'
  #     - run:
  #       command: yarn build
  #     - persist_to_workspace:
  #       root: ~/dist
  #       paths:  ./dist
  # release:
  #   docker:
  #     # replace with your preferred image
  #     - image: cimg/base:stable
  #   steps:
  #   - attach_workspace:
  #     at:
  #   - run:
  #     command:
  #       - export PACKAGE_VERSION=$(node -p "require('./package.json').version")
  #       - curl \
  #         -X POST \
  #         -H "Accept: application/vnd.github+json" \
  #         -H "Authorization: Bearer ${GITHUB_TOKEN}"\
  #         -H "X-GitHub-Api-Version: 2022-11-28" \
  #         https://api.github.com/repos/tingruchen/card-game/releases \
  #         -d '{"tag_name":${PACKAGE_VERSION},"target_commitish":"main","name":${PACKAGE_VERSION},"body":"release of " + ${PACKAGE_VERSION},"draft":false,"prerelease":false,"generate_release_notes":false}'
  # release-assets:
  #   docker:
  #     # replace with your preferred image
  #     - image: cimg/base:stable
  #   steps:
  #   - attach_workspace:
  #     at:
  #   - run:
  #     command:
  #       - export PACKAGE_VERSION=$(node -p "require('./package.json').version")
  #       - curl \
  #         -X POST \
  #         -H "Accept: application/vnd.github+json" \
  #         -H "Authorization: Bearer ${GITHUB_TOKEN}"\
  #         -H "X-GitHub-Api-Version: 2022-11-28" \
  #         -d \
  #         https://uploads.github.com/repos/tingruchen/card-game/releases/${PACKAGE_VERSION}/assets?name=dist.zip
  #         name: print tag
  #         command: echo tagged! $CIRCLE_TAG
  build:
    executor: node/default
    steps:
      - node/install-packages:
          pkg-manager: yarn
      - run:
        command: yarn build
      - persist_to_workspace:
        root: ./dist
        paths:  ./dist
  release-assets:
    executor: node/default
    steps:
    - attach_workspace:
      at: ./dist
    - run:
      command: node ../tag-release.js

workflows:
  build_test_deploy: # this can be any name you choose
    jobs:
      - build_and_test
      - deploy:
          requires:
            - build_and_test # only deploy if the build_and_test job has completed
          filters:
            branches:
              only: main # only deploy when on main
      - example-job
  tag-release:
    jobs:
      - build
      # - release:
      #   filters:
      #     branches:
      #       only:
      #         - release-test
      #     tags:
      #       only:
      #         - /.*/
